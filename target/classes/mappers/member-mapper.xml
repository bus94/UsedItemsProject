<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.ss.useditems.mapper.MemberMapper">
	<!-- 회원 정보 -->
	<resultMap type="memberDTO" id="memberMap">
		<result property="acc_index" column="acc_index" />
		<result property="acc_id" column="acc_id" />
		<result property="acc_password" column="acc_password" />
		<result property="acc_birthDate" column="acc_birthDate" />
		<result property="acc_phone" column="acc_phone" />
		<result property="acc_name" column="acc_name" />
		<result property="acc_address" column="acc_address" />
		<result property="acc_addressDetail" column="acc_addressDetail" />
		<result property="acc_addressX" column="acc_addressX" />
		<result property="acc_addressY" column="acc_addressY" />
		<result property="acc_nickname" column="acc_nickname" />
		<result property="acc_profile" column="acc_profile" />
		<result property="acc_count" column="acc_count" />
		<result property="acc_lastMessage" column="acc_lastMessage" />
		<result property="acc_status" column="acc_status" />
		<result property="acc_enrollDate" column="acc_enrollDate" />
	</resultMap>

	<!-- 물품 정보 -->
	<resultMap type="itemInfoDTO" id="itemInfoMap">
		<result property="item_index" column="item_index" />
		<result property="item_seller" column="item_seller" />
		<result property="item_title" column="item_title" />
		<result property="item_content" column="item_content" />
		<result property="item_category" column="item_category" />
		<result property="item_price" column="item_price" />
		<result property="item_place" column="item_place" />
		<result property="item_place_name" column="item_place_name" />
		<result property="item_placeX" column="item_placeX" />
		<result property="item_placeY" column="item_placeY" />
		<result property="item_status" column="item_status" />
		<result property="item_enrollDate" column="item_enrollDate" />
		<result property="item_click" column="item_click" />
		<result property="item_interest" column="item_interest" />
		<result property="item_offDate" column="item_offDate" />
		<result property="item_buyer" column="item_buyer" />
		<result property="acc_nickname" column="acc_nickname" />
		<result property="acc_address" column="acc_address" />
		<result property="repl_count" column="repl_count" />
		<result property="show_thumb" column="show_thumb" />
		<result property="show_img1" column="show_img1" />
		<result property="show_img2" column="show_img2" />
		<result property="show_img3" column="show_img3" />
		<result property="show_img4" column="show_img4" />
		<result property="show_img5" column="show_img5" />
	</resultMap>

	<!-- 회원 정보 + 피신고횟수 -->
	<resultMap type="memberDTO" id="memberInfoMap"
		extends="memberMap">
		<result property="acc_blackCount" column="acc_blackCount" />
	</resultMap>

	<!-- 로그인 확인 -->
	<select id="loginOK" parameterType="memberDTO"
		resultMap="memberMap">
		SELECT * FROM account WHERE acc_id = #{acc_id} AND
		acc_password = #{acc_password} and acc_status != 'inactive'
	</select>

	<!-- 중복확인 -->
	<select id="selectById" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM ACCOUNT WHERE ACC_ID = #{id}
	</select>

	<!-- 회원가입 -->
	<insert id="signup" parameterType="memberDTO">
		INSERT INTO ACCOUNT(acc_index,
		acc_id, acc_password, acc_birthDate,
		acc_phone, acc_name, acc_address,
		acc_addressx, acc_addressy, acc_addressdetail,
		acc_nickname,
		acc_profile,
		acc_count, acc_lastMessage, acc_status,
		acc_enrollDate)
		VALUES
		(ACCOUNT_SEQ.NEXTVAL, #{acc_id},
		#{acc_password},
		#{acc_birthDate},
		#{acc_phone}, #{acc_name},
		#{acc_address},#{acc_addressX},#{acc_addressY},
		#{acc_addressDetail},#{acc_id}, NULL, DEFAULT,
		DEFAULT, 'active',
		SYSDATE)
	</insert>

	<!-- acc_id로 acc_index 조회 -->
	<select id="selectIdIndex" parameterType="String"
		resultType="int">
		SELECT acc_index FROM account WHERE acc_id = #{acc_id}
	</select>

	<!-- 타 이용자 정보 조회 -->
	<select id="selectAccountByAcc_id" parameterType="String"
		resultType="memberDTO">
		select * from ACCOUNT where acc_id = #{acc_id}
	</select>

	<!-- 타 이용자 정보 조회 (acc_id) + 피신고 -->
	<select id="selectInfoByAcc_id" parameterType="String"
		resultMap="memberInfoMap">
		select
		*
		from ACCOUNT acc
		left join (select
		black_object,
		count(black_index) acc_blackCount
		from BLACKLIST group by black_object)
		black
		on (acc.acc_index = black.black_object)
		where acc_id = #{acc_id}
	</select>

	<!-- 프로필 이미지 수정 -->
	<update id="updateProfile" parameterType="String">
		update ACCOUNT set
		acc_profile=#{originalFileName} where acc_id=#{acc_id}
	</update>

	<!-- 비밀번호 수정 -->
	<update id="updatePW" parameterType="String">
		update ACCOUNT set
		acc_password=#{neoPWconf_input} where acc_id=#{acc_id}
	</update>

	<!-- 닉네임 수정 -->
	<update id="updateNickname" parameterType="String">
		update ACCOUNT set
		acc_nickname=#{nickname_input} where acc_id=#{acc_id}
	</update>

	<!-- 핸드폰 번호 수정 -->
	<update id="updatePhone" parameterType="String">
		update ACCOUNT set
		acc_phone=#{phone_input} where acc_id=#{acc_id}
	</update>

	<!-- 이름, 생년월일, 주소 수정 -->
	<update id="updateRedunds" parameterType="String">
		update ACCOUNT set
		acc_name=#{name_input},
		acc_birthDate=TO_DATE(#{birthDate_input},
		'YYYY-MM-DD'),
		acc_address=#{address_input},
		acc_addressDetail=#{addressDetail_input},
		acc_addressX=#{addressX_input},
		acc_addressY=#{addressY_input}
		where
		acc_id=#{acc_id}
	</update>

	<!-- 회원탈퇴 -->
	<update id="withdraw" parameterType="String">
		update ACCOUNT set
		acc_status='inactive' where acc_id=#{acc_id}
	</update>

	<!-- 마이페이지 물품 조회 리스트 불러오기 (거래중, 판매내역, 구매내역) -->
	<select id="selectItemByAcc_index" parameterType="int"
		resultMap="itemInfoMap">
		SELECT
		*
		FROM
		(select
		item.*,
		count(repl_index) repl_count
		from
		item
		left join reply on item_index=repl_item
		group by
		item_index,
		item_seller,
		item_title,
		item_content,
		item_category,
		item_price,
		item_place,
		item_place_name,
		item_place_address,
		item_placeX,
		item_placeY,
		item_status,
		item_enrolldate,
		item_click,
		item_interest,
		item_offdate,
		item_buyer)
		LEFT
		JOIN ACCOUNT ON item_seller = acc_index
		LEFT JOIN CHATROOM ON room_item
		= item_index
		LEFT JOIN REPLY ON
		room_reply = repl_index
		LEFT JOIN
		SHOWCASE ON show_item
		= item_index
		WHERE
		item_seller = #{acc_index}
		OR
		repl_candidate =
		#{acc_index}
		OR
		item_buyer = #{acc_index}
		ORDER BY
		item_index DESC
	</select>

	<!-- 관심 물품 (찜 목록) 리스트 불러오기 -->
	<select id="selectInterestsByAcc_index" parameterType="int"
		resultMap="itemInfoMap">
		SELECT *
		FROM
		(select
		item.*,
		count(repl_index) repl_count
		from
		item
		left join reply on item_index=repl_item
		group by
		item_index,
		item_seller,
		item_title,
		item_content,
		item_category,
		item_price,
		item_place,
		item_place_name,
		item_place_address,
		item_placeX,
		item_placeY,
		item_status,
		item_enrolldate,
		item_click,
		item_interest,
		item_offdate,
		item_buyer)
		LEFT
		JOIN INTEREST ON item_index = int_item
		LEFT JOIN SHOWCASE ON show_item
		= item_index
		WHERE int_subject =
		#{acc_index}
		ORDER BY int_index DESC
	</select>
</mapper>